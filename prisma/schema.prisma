generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id           String        @id @default(auto()) @map("_id") @db.ObjectId
  email        String        @unique
  name         String?
  meals        Meal[]
  insulinDoses InsulinDose[]
  measurements Measurement[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model Meal {
  id           String        @id @default(auto()) @map("_id") @db.ObjectId
  user         User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId       String        @db.ObjectId
  name         String        @unique
  description  String?
  measurements Measurement[]
  insulinDoses InsulinDose[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt

  @@unique([name, userId])
}

model Measurement {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String @db.ObjectId

  meal   Meal?   @relation(fields: [mealId], references: [id], onDelete: Cascade)
  mealId String? @db.ObjectId

  insulinDose InsulinDose? // 1:1 back-reference

  beforeMeal SugarReading?
  afterMeal  SugarReading?

  mealType   String // explicitly saved here
  date       DateTime
  dateString String // custom type to store only the date (e.g., "2025-04-28")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userId, mealId, mealType, dateString]) // This enforces 1 per user/meal/date
}

model InsulinDose {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String @db.ObjectId

  measurement   Measurement? @relation(fields: [measurementId], references: [id], onDelete: Cascade)
  measurementId String?      @unique @db.ObjectId // Enforce 1:1

  meal   Meal?   @relation(fields: [mealId], references: [id], onDelete: Cascade)
  mealId String? @db.ObjectId

  date       DateTime
  dateString String // custom type to store only the date (e.g., "2025-04-28")

  units Float
  type  String
  notes String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

type SugarReading {
  value     Float
  note      String?
  createdAt DateTime @default(now())
}
